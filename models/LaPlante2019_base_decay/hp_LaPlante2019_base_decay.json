"{\n    \"__module__\": \"hyperparams\",\n    \"MODEL_ID\": \"1625936851911079\",\n    \"MODEL_NAME\": \"LaPlante2019_base_decay\",\n    \"MODEL_DIR\": \"models/LaPlante2019_base_decay\",\n    \"HP_JSON_FILENAME\": \"hp_LaPlante2019_base_decay.json\",\n    \"DATA_PATH\": \"../data/shared/LaPlanteSims/v10/t21_snapshots_wedge_transposed.hdf5\",\n    \"DESC\": \"As close to Paul's 2019 paper as possible + decaying lr\",\n    \"BATCHSIZE\": 32,\n    \"EPOCHS\": 400,\n    \"TRAIN_PERCENT\": 0.8,\n    \"INITIAL_LR\": 0.01,\n    \"LR_DECAY\": true,\n    \"DECAY_RT\": 1,\n    \"INPUT_CHANNELS\": 30,\n    \"N_PARAMS\": 3,\n    \"N_SAMPLES\": 1000,\n    \"loss_fn\": {\n        \"training\": true,\n        \"_parameters\": \"OrderedDict()\",\n        \"_buffers\": \"OrderedDict()\",\n        \"_non_persistent_buffers_set\": \"set()\",\n        \"_backward_hooks\": \"OrderedDict()\",\n        \"_is_full_backward_hook\": null,\n        \"_forward_hooks\": \"OrderedDict()\",\n        \"_forward_pre_hooks\": \"OrderedDict()\",\n        \"_state_dict_hooks\": \"OrderedDict()\",\n        \"_load_state_dict_pre_hooks\": \"OrderedDict()\",\n        \"_modules\": \"OrderedDict()\",\n        \"reduction\": \"mean\"\n    },\n    \"LAYER_DICT\": {\n        \"conv1\": \"Conv2d(30, 16, kernel_size=(3, 3), stride=(1, 1), padding=same)\",\n        \"relu1_1\": \"ReLU()\",\n        \"batch1\": \"BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\",\n        \"maxpool1\": \"MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\",\n        \"conv2\": \"Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=same)\",\n        \"relu1_2\": \"ReLU()\",\n        \"batch2\": \"BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\",\n        \"maxpool2\": \"MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\",\n        \"conv3\": \"Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=same)\",\n        \"relu1_3\": \"ReLU()\",\n        \"batch3\": \"BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\",\n        \"maxpool3\": \"MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\",\n        \"global_avgpool\": \"AvgPool2d(kernel_size=64, stride=64, padding=0)\",\n        \"flat1\": \"Flatten(start_dim=1, end_dim=-1)\",\n        \"drop1\": \"Dropout(p=0.2, inplace=False)\",\n        \"dense1\": \"Linear(in_features=64, out_features=200, bias=True)\",\n        \"relu2_1\": \"ReLU()\",\n        \"drop2\": \"Dropout(p=0.2, inplace=False)\",\n        \"dense2\": \"Linear(in_features=200, out_features=100, bias=True)\",\n        \"relu2_2\": \"ReLU()\",\n        \"drop3\": \"Dropout(p=0.2, inplace=False)\",\n        \"dense3\": \"Linear(in_features=100, out_features=20, bias=True)\",\n        \"relu2_3\": \"ReLU()\",\n        \"output\": \"Linear(in_features=20, out_features=3, bias=True)\"\n    },\n    \"save_hyparam_summary\": {},\n    \"optimizer\": {},\n    \"scheduler\": {},\n    \"__dict__\": null,\n    \"__weakref__\": null,\n    \"__doc__\": null\n}"